{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\root.tsx\");\n}\n// REMIX HMR END\n\nimport { Links, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\nimport \"./tailwind.css?__remix_sideEffect__\";\n\n// Expose environment variables to the client\nexport const loader = () => {\n  return json({\n    ENV: {\n      SUPABASE_URL: process.env.SUPABASE_URL,\n      SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY\n    }\n  });\n};\nexport const links = () => [{\n  rel: \"preconnect\",\n  href: \"https://fonts.googleapis.com\"\n}, {\n  rel: \"preconnect\",\n  href: \"https://fonts.gstatic.com\",\n  crossOrigin: \"anonymous\"\n}, {\n  rel: \"stylesheet\",\n  href: \"https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap\"\n}];\nexport default function App() {\n  _s();\n  const data = useLoaderData();\n  return <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <div id='root'>\n          <Outlet />\n          <ScrollRestoration />\n          <Scripts />\n          <script dangerouslySetInnerHTML={{\n          __html: `window.ENV = ${JSON.stringify(data)}`\n        }} />\n\n        </div>\n      </body>\n    </html>;\n}\n_s(App, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AA4Bb;AAhDR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sBAAwB,EAAE;AAAA,EACnE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAe;AACjB;AAgBO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AAAA,EACN,aAAa;AACf,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AACc,SAAR,MAAuB;AAC5B,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,SAAO,mDAAC,UAAK,MAAK,MACd;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,UACC,6DAAC,SAAI,IAAG,QACN;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,YAAO,yBAAyB;AAAA,QACjC,QAAQ,gBAAgB,KAAK,UAAU,IAAI;AAAA,MAC7C,KAFE;AAAA;AAAA;AAAA;AAAA,aAEC;AAAA,SANH;AAAA;AAAA;AAAA;AAAA,WAQA,KATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,OAfG;AAAA;AAAA;AAAA;AAAA,SAgBL;AACJ;AACA,GAAG,KAAK,gCAAgC,OAAO,WAAY;AACzD,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,KAAK;AAEtB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
